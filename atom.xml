<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KooFrank's Blog]]></title>
  <link href="http://phpmaple.github.io/atom.xml" rel="self"/>
  <link href="http://phpmaple.github.io/"/>
  <updated>2014-08-02T11:16:10+08:00</updated>
  <id>http://phpmaple.github.io/</id>
  <author>
    <name><![CDATA[koofrank]]></name>
    <email><![CDATA[koofranker@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CAShapeLayer和CAGradientLayer]]></title>
    <link href="http://phpmaple.github.io/blog/2014/04/03/cashapelayer-and-cagradientlayer/"/>
    <updated>2014-04-03T17:43:00+08:00</updated>
    <id>http://phpmaple.github.io/blog/2014/04/03/cashapelayer-and-cagradientlayer</id>
    <content type="html"><![CDATA[<p><img src="http://phpmaple.github.io/images/2014/04/03/start.jpg"></p>

<p>两个动画效果来了解一下CALayer的两个重要的subClass，CAGradientLayer和CAShapeLayer。
微视录制视频的时候那个进度效果和Spark相机类似，但是个人还是比较喜欢Spark相机的录制的效果。</p>

<!--more-->


<h3>CAShapeLayer</h3>

<p><img src="http://phpmaple.github.io/images/2014/04/03/SparkProgress.gif"></p>

<p>我们做一个和Spark相机一样的圆形进度，每一段有一种颜色，标识不同时间段录的视频。</p>

<p>首先，我们创建一个<code>UIView</code>的子类叫<code>RecordingCircleOverlayView</code>这样看起来比较有意义，然后我们看到圆形进度条有一个底色是灰色的圆形轨迹，所以我们创建一个<code>CAShapeLayer</code>，然后提供一个<code>CGPathRef</code>给它的<code>path</code>属性，我们使用<code>UIBezierPath</code>这个类的<code>bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:</code>这个方法给<code>CAShapeLayer</code>提供<code>path</code>。</p>

<p>图中我们可以看到有彩色一些片段，我们使用另外一个<code>CAShapeLayer</code>和同样的<code>CGPathRef</code>作为背景层，由于是同样的Path，所以我们给<code>UIBezierPath</code>创建一个属性，这样不用每次都重复创建。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CGPoint</span> <span class="n">arcCenter</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">CGRectGetMidY</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">),</span> <span class="n">CGRectGetMidX</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">));</span>
</span><span class='line'><span class="n">CGFloat</span> <span class="n">radius</span> <span class="o">=</span> <span class="n">CGRectGetMidX</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">)</span> <span class="o">-</span> <span class="n">insets</span><span class="p">.</span><span class="n">top</span> <span class="o">-</span> <span class="n">insets</span><span class="p">.</span><span class="n">bottom</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">circlePath</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIBezierPath</span> <span class="nl">bezierPathWithArcCenter:</span><span class="n">arcCenter</span>
</span><span class='line'>                                               <span class="nl">radius:</span><span class="n">radius</span>
</span><span class='line'>                                             <span class="nl">startAngle:</span><span class="n">M_PI</span>
</span><span class='line'>                                             <span class="nl">endAngle:</span><span class="o">-</span><span class="n">M_PI</span>
</span><span class='line'>                                            <span class="nl">clockwise:</span><span class="n">NO</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>开始角度<code>M_PI</code>和结束角度<code>-M_PI</code>和Spark相机是一样的逆时针方向，然后我们再创建一个背景层</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">backgroundLayer</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAShapeLayerlayer</span><span class="p">];</span>
</span><span class='line'><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">circlePath</span><span class="p">.</span><span class="n">CGPath</span><span class="p">;</span>
</span><span class='line'><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">strokeColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIColor</span> <span class="n">lightGrayColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">fillColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIColorclearColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">strokeWidth</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后我们把<code>backgroundLayer</code>添加为<code>RecordingCircleOverlayView</code>的subLayer</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="n">backgroundLayer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果我们build运行成功的话应该是这样的。</p>

<p><img src="http://phpmaple.github.io/images/2014/04/03/empty-circle.png"></p>

<p>现在我们需要一个方法来实现开始和停止进度，如果我们回头去看<a href="https://www.sparkcamera.com/" target="_blank">Spark Camera</a>,我们需要按下手指才会开始松开结束，首先<code>UITapGestureRecognizer</code>和<code>UIControlEventTouchUpInside</code>没有方法检测按下和松开，但是我们可以用<code>UIControlEventTouchDown</code>，但是我们在Reveal里面并没有看到它是这么做的，所以最后决定使用复写<code>UIResponder</code>的<code>touchesBegan:WithEvent: and touchesEnded:WithEvent:</code>方法来实现。</p>

<p><img src="http://phpmaple.github.io/images/2014/04/03/spark-revealed.png"></p>

<p>有个这个方法后，我们可以控制<code>CAShapeLayer</code>的<code>strokeEnd</code>的属性大小来实现动画效果，首页我们先设置它的值为0然后把这个layer添加作为子类。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">progressLayer</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAShapeLayerlayer</span><span class="p">];</span>
</span><span class='line'><span class="n">progressLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">circlePath</span><span class="p">.</span><span class="n">CGPath</span><span class="p">;</span>
</span><span class='line'><span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">selfrandomColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'><span class="n">progressLayer</span><span class="p">.</span><span class="n">fillColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIColorclearColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'><span class="n">progressLayer</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">strokeWidth</span><span class="p">;</span>
</span><span class='line'><span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeEnd</span> <span class="o">=</span> <span class="mf">0.f</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后我们发现有多个<code>CAShapeLayer</code>分别代表不同的段，而且每个<code>CAShapeLayer</code>都有自己的<code>strokeEnd</code>,所以我们创建一个数组，把每一个<code>CAShapeLayer</code>添加到数组里。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">progressLayers</span> <span class="nl">addObject:</span><span class="n">progressLayer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>继而我们又需要一个属性代表当前的正在增加可以动画的片段，所以我们添加一个属性来记录当前的进度的layer。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">self</span><span class="p">.</span><span class="n">currentProgressLayer</span> <span class="o">=</span> <span class="n">progressLayer</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以最后方法看起来是这样的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">addNewLayer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">progressLayer</span> <span class="o">=</span> <span class="p">[</span><span class="n">CAShapeLayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">progressLayer</span><span class="p">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">circlePath</span><span class="p">.</span><span class="n">CGPath</span><span class="p">;</span>
</span><span class='line'>    <span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">self</span> <span class="n">randomColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'>    <span class="n">progressLayer</span><span class="p">.</span><span class="n">fillColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIColor</span> <span class="n">clearColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">];</span>
</span><span class='line'>    <span class="n">progressLayer</span><span class="p">.</span><span class="n">lineWidth</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">strokeWidth</span><span class="p">;</span>
</span><span class='line'>    <span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeEnd</span> <span class="o">=</span> <span class="mf">0.f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span> <span class="nl">addSublayer:</span><span class="n">progressLayer</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">progressLayers</span> <span class="nl">addObject:</span><span class="n">progressLayer</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">currentProgressLayer</span> <span class="o">=</span> <span class="n">progressLayer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>为了让它可以有动画，我们有两个重点，其一我们可以使用<code>rotation transform</code>属性，但是我们使用<code>CAShapeLayer</code>的<code>strokeStart</code>和<code>strokeEnd</code>结合起来实现动画，其二停止动画后我们可以使用截图当前的状态同时移除动画，这样就可以保留每个状态的颜色。为了实现这些，我们使用<code>CABasicAnimation</code>和<code>CAlayer</code>的属性<code>presentationLayer</code>，直接上代码。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">updateAnimations</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">duration</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">duration</span> <span class="o">*</span> <span class="p">(</span><span class="mf">1.f</span> <span class="o">-</span> <span class="p">[[</span><span class="n">self</span><span class="p">.</span><span class="n">progressLayers</span> <span class="n">firstObject</span><span class="p">]</span> <span class="n">strokeEnd</span><span class="p">]);</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">strokeEndFinal</span> <span class="o">=</span> <span class="mf">1.f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">progressLayer</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">progressLayers</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">CABasicAnimation</span> <span class="o">*</span><span class="n">strokeEndAnimation</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nl">animationWithKeyPath:</span><span class="s">@&quot;strokeEnd&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">duration</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeEnd</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">strokeEndFinal</span><span class="p">);</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">autoreverses</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="mf">0.f</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>        <span class="n">strokeEndAnimation</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">progressLayer</span> <span class="nl">addAnimation:</span><span class="n">strokeEndAnimation</span> <span class="nl">forKey:</span><span class="s">@&quot;strokeEndAnimation&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">strokeEndFinal</span> <span class="o">-=</span> <span class="p">(</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeEnd</span> <span class="o">-</span> <span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeStart</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">progressLayer</span> <span class="o">!=</span> <span class="n">self</span><span class="p">.</span><span class="n">currentProgressLayer</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="n">CABasicAnimation</span> <span class="o">*</span><span class="n">strokeStartAnimation</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nl">animationWithKeyPath:</span><span class="s">@&quot;strokeStart&quot;</span><span class="p">];</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">duration</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeStart</span><span class="p">);</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">strokeEndFinal</span><span class="p">);</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">autoreverses</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="mf">0.f</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'>            <span class="n">strokeStartAnimation</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="n">progressLayer</span> <span class="nl">addAnimation:</span><span class="n">strokeStartAnimation</span> <span class="nl">forKey:</span><span class="s">@&quot;strokeStartAnimation&quot;</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">CABasicAnimation</span> <span class="o">*</span><span class="n">backgroundLayerAnimation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nl">animationWithKeyPath:</span><span class="s">@&quot;strokeStart&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">duration</span> <span class="o">=</span> <span class="n">duration</span><span class="p">;</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">strokeStart</span><span class="p">);</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="err">@</span><span class="p">(</span><span class="mf">1.f</span><span class="p">);</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">autoreverses</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="mf">0.f</span><span class="p">;</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">fillMode</span> <span class="o">=</span> <span class="n">kCAFillModeForwards</span><span class="p">;</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">removedOnCompletion</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="n">backgroundLayerAnimation</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">backgroundLayer</span> <span class="nl">addAnimation:</span><span class="n">backgroundLayerAnimation</span> <span class="nl">forKey:</span><span class="s">@&quot;strokeStartAnimation&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面代码中我们看到我们遍历了所有的<code>CAShapeLayer</code>,给每个<code>strokeEnd</code>添加了<code>CABasicAnimation</code>动画，然后给不是当前的layer的<code>strokeStart</code>属性添加了一个动画。再来看看duration，假设一圈代表45秒钟，这个意味着每次停止之后又开始的话duration肯定是减少的，所以用duration代表一圈剩余的可以录制的时间，再看<code>strekeEndFinal</code>，假设有很多段，肯定不是每个段的strkeEnd都是1所以这个是用来标识每段可以达到的最终距离一圈为(0-1)。最后我们需要更新background layer除去有彩色段剩余的地方。</p>

<p>你可能注意到上面的代码里面并没有移除动画，所以对于显示每一个<code>CAShapeLayer</code>我们设置都是通过layers的<code>presentationLayer</code>设置<code>strokeStart</code>和<code>strokeEnd</code>，然后移除CAShapeLayer上的所有动画。</p>

<p class='info info' data-title='presentationLayer在文档中是这么说的'>While an animation is in progress, you can retrieve this object and use it to get the current values for those animations.</p>


<p>所以把上面所说的结合起来，代码应该是这样的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">removeAnimations</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">CAShapeLayer</span> <span class="o">*</span><span class="n">progressLayer</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">progressLayers</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeStart</span> <span class="o">=</span> <span class="p">[</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">presentationLayer</span> <span class="n">strokeStart</span><span class="p">];</span>
</span><span class='line'>        <span class="n">progressLayer</span><span class="p">.</span><span class="n">strokeEnd</span> <span class="o">=</span> <span class="p">[</span><span class="n">progressLayer</span><span class="p">.</span><span class="n">presentationLayer</span> <span class="n">strokeEnd</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">progressLayer</span> <span class="n">removeAllAnimations</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="n">self</span><span class="p">.</span><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">strokeStart</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">backgroundLayer</span><span class="p">.</span><span class="n">presentationLayer</span> <span class="n">strokeStart</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">backgroundLayer</span> <span class="n">removeAllAnimations</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后，还有一个问题是我们需要确保我们完成了动画以后手指按下不要保持添加layer和更新动画这些操作，所以我们可以设置一个代理方法像这样，就大功告成了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">animationDidStop:</span><span class="p">(</span><span class="n">CAAnimation</span> <span class="o">*</span><span class="p">)</span><span class="nv">anim</span> <span class="nf">finished:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">flag</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">hasFinishedAnimating</span> <span class="o">==</span> <span class="n">NO</span> <span class="o">&amp;&amp;</span> <span class="n">flag</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="n">removeAnimations</span><span class="p">];</span>
</span><span class='line'>        <span class="n">self</span><span class="p">.</span><span class="n">finishedAnimating</span> <span class="o">=</span> <span class="n">flag</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后你可以在<a href="https://github.com/subjc/SparkRecordingCircle" target="_blank">github</a>上面下载这个项目。</p>

<h3>CAGradientLayer</h3>

<p><img src="http://phpmaple.github.io/images/2014/04/03/GradientProgressView.gif"></p>

<p>首页我们创建一个<code>UIView</code>的子类，然后我们使用<code>CAGradientLayer</code>作为默认的<code>CALayer</code>。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">+</span> <span class="p">(</span><span class="n">Class</span><span class="p">)</span><span class="nf">layerClass</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">[</span><span class="n">CAGradientLayer</span> <span class="n">class</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>CAGradientLayer</code>是<code>CALayer</code>的一个子类，添加了一些额外的属性，我们将是使用<code>colors</code>,<code>startPoint</code>,<code>endPoint</code>这些来创建一个有梯度的动画.</p>

<p>现在有几个方法来实现这种彩色的效果，一种是我现在将要使用的创建一个包含<code>UIColor</code>的数组，有不同的色调的值，在你的<code>initWithFrame</code>方法里添加一下代码：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// Use a horizontal gradient </span>
</span><span class='line'><span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="n">self</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">setStartPoint:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">setEndPoint:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Create colors using hues in +5 increments</span>
</span><span class='line'><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSInteger</span> <span class="n">hue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">hue</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="mi">360</span><span class="p">;</span> <span class="n">hue</span> <span class="o">+=</span> <span class="mi">5</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIColor</span> <span class="o">*</span><span class="n">color</span><span class="p">;</span>
</span><span class='line'>    <span class="n">color</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="nl">colorWithHue:</span><span class="mf">1.0</span> <span class="o">*</span> <span class="n">hue</span> <span class="o">/</span> <span class="mf">360.0</span>
</span><span class='line'>                       <span class="nl">saturation:</span><span class="mf">1.0</span>
</span><span class='line'>                       <span class="nl">brightness:</span><span class="mf">1.0</span>
</span><span class='line'>                            <span class="nl">alpha:</span><span class="mf">1.0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">colors</span> <span class="nl">addObject:</span><span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="n">color</span> <span class="n">CGColor</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">setColors:</span><span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithArray:</span><span class="n">colors</span><span class="p">]];</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在运行你可以看见一个水平光谱图，下一步创建移动的效果，我们可以遍历这个颜色的数组使用layer animation,一个动画结束的时候会前面的颜色方法最后重复这个进度，方法是这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">performAnimation</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Move the last color in the array to the front</span>
</span><span class='line'>    <span class="c1">// shifting all the other colors.</span>
</span><span class='line'>    <span class="n">CAGradientLayer</span> <span class="o">*</span><span class="n">layer</span> <span class="o">=</span> <span class="p">(</span><span class="kt">id</span><span class="p">)[</span><span class="n">self</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">mutable</span> <span class="o">=</span> <span class="p">[[</span><span class="n">layer</span> <span class="n">colors</span><span class="p">]</span> <span class="n">mutableCopy</span><span class="p">];</span>
</span><span class='line'>    <span class="kt">id</span> <span class="n">lastColor</span> <span class="o">=</span> <span class="p">[[</span><span class="n">mutable</span> <span class="n">lastObject</span><span class="p">]</span> <span class="n">retain</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mutable</span> <span class="n">removeLastObject</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mutable</span> <span class="nl">insertObject:</span><span class="n">lastColor</span> <span class="nl">atIndex:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">lastColor</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>    <span class="n">NSArray</span> <span class="o">*</span><span class="n">shiftedColors</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithArray:</span><span class="n">mutable</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">mutable</span> <span class="n">release</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Update the colors on the model layer</span>
</span><span class='line'>    <span class="p">[</span><span class="n">layer</span> <span class="nl">setColors:</span><span class="n">shiftedColors</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Create an animation to slowly move the gradient left to right.</span>
</span><span class='line'>    <span class="n">CABasicAnimation</span> <span class="o">*</span><span class="n">animation</span><span class="p">;</span>
</span><span class='line'>    <span class="n">animation</span> <span class="o">=</span> <span class="p">[</span><span class="n">CABasicAnimation</span> <span class="nl">animationWithKeyPath:</span><span class="s">@&quot;colors&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">animation</span> <span class="nl">setToValue:</span><span class="n">shiftedColors</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">animation</span> <span class="nl">setDuration:</span><span class="mf">0.08</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">animation</span> <span class="nl">setRemovedOnCompletion:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">animation</span> <span class="nl">setFillMode:</span><span class="n">kCAFillModeForwards</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">animation</span> <span class="nl">setDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">layer</span> <span class="nl">addAnimation:</span><span class="n">animation</span> <span class="nl">forKey:</span><span class="s">@&quot;animateGradient&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">animationDidStop:</span><span class="p">(</span><span class="n">CAAnimation</span> <span class="o">*</span><span class="p">)</span><span class="nv">animation</span> <span class="nf">finished:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">flag</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">self</span> <span class="n">performAnimation</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>为了增加一个标识进度的进行，我们可以使用mask属性来屏蔽一部分，在头文件中添加两个属性：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">readonly</span><span class="p">)</span> <span class="n">CALayer</span> <span class="o">*</span><span class="n">maskLayer</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="n">CGFloat</span> <span class="n">progress</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后在<code>initWithFrame:</code>里面添加：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">maskLayer</span> <span class="o">=</span> <span class="p">[</span><span class="n">CALayer</span> <span class="n">layer</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">maskLayer</span> <span class="nl">setFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'><span class="p">[</span><span class="n">maskLayer</span> <span class="nl">setBackgroundColor:</span><span class="p">[[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">]</span> <span class="n">CGColor</span><span class="p">]];</span>
</span><span class='line'><span class="p">[</span><span class="n">layer</span> <span class="nl">setMask:</span><span class="n">maskLayer</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>创建一个宽度为0的mask覆盖整个View，mask的颜色不重要，当我们<code>progress</code>属性更新的时候我们会增加它的宽度，所以复写<code>setProgress:</code>方法像下面这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setProgress:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">value</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">progress</span> <span class="o">!=</span> <span class="n">value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// Progress values go from 0.0 to 1.0</span>
</span><span class='line'>        <span class="n">progress</span> <span class="o">=</span> <span class="n">MIN</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">fabs</span><span class="p">(</span><span class="n">value</span><span class="p">));</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="n">setNeedsLayout</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">layoutSubviews</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Resize our mask layer based on the current progress</span>
</span><span class='line'>    <span class="n">CGRect</span> <span class="n">maskRect</span> <span class="o">=</span> <span class="p">[</span><span class="n">maskLayer</span> <span class="n">frame</span><span class="p">];</span>
</span><span class='line'>    <span class="n">maskRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">=</span> <span class="n">CGRectGetWidth</span><span class="p">([</span><span class="n">self</span> <span class="n">bounds</span><span class="p">])</span> <span class="o">*</span> <span class="n">progress</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">maskLayer</span> <span class="nl">setFrame:</span><span class="n">maskRect</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>现在当我们设置<code>progress</code>值的时候我们要确保它在0到1之间，然后下一步在<code>layoutSubviews</code>里面我们重新定义mask的值。</p>

<p>当然也可以从<a href="https://github.com/nrj/GradientProgressView" target="_blank">github</a>看项目的更多细节。</p>

<p>参考：</p>

<ul>
<li><p><a href="http://subjc.com/spark-camera/" target="_blank">Spark Camera&rsquo;s recording meter</a></p></li>
<li><p><a href="https://nrj.io/animated-progress-view-with-cagradientlayer" target="_blank">Animated progress view with CAGradientLayer</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xcode之BuildPhases]]></title>
    <link href="http://phpmaple.github.io/blog/2014/03/13/buildphases/"/>
    <updated>2014-03-13T19:04:00+08:00</updated>
    <id>http://phpmaple.github.io/blog/2014/03/13/buildphases</id>
    <content type="html"><![CDATA[<p><img src="http://phpmaple.github.io/images/2014/03/13/build-phases.jpg"></p>

<p>引言：Build Phases是Xcode在build的时候执行的一些任务，这次就关于代码优化和重构方面，来说说Build Phases可以帮助我们的一些Script，还请大家补充。</p>

<!--more-->


<h2>Build Phrases与Xcode插件</h2>

<p>1.谈到重构，如果我们想在后期把我们的项目重构一下，这不仅可以让我们重新巩固一下用到的iOS知识，还可以提高我们对整个项目理解和代码水平，其中重构的最简单的一个方法就是从代码行数开始检查，从我了解和经验我们暂可以规定每行代码不超过80个字符，每个函数不超过限定在50-80行之间，这样对于我们开发者以后的维护来说，简洁的代码更容易进行修改和维护。每个类最好保持在400行以内，如果太多就可以考虑重构一下你的类了，我发现1000行代码看着真的头晕，下面一个Build Phrases就可以帮助你检查你所有m文件大于400行的类，warning提示你。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">find</span> <span class="s">&quot;${SRCROOT}&quot;</span> <span class="err">\</span><span class="p">(</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.m&quot;</span> <span class="err">\</span><span class="p">)</span> <span class="o">-</span><span class="n">and</span> <span class="err">\</span><span class="p">(</span> <span class="o">-</span><span class="n">path</span> <span class="s">&quot;${SRCROOT}/Pods/*&quot;</span> <span class="o">-</span><span class="n">prune</span> <span class="o">-</span><span class="n">o</span> <span class="o">-</span>
</span><span class='line'><span class="n">print0</span> <span class="err">\</span><span class="p">)</span> <span class="o">|</span> <span class="n">xargs</span> <span class="o">-</span><span class="mi">0</span> <span class="n">wc</span> <span class="o">-</span><span class="n">l</span> <span class="o">|</span> <span class="n">awk</span> <span class="err">&#39;</span><span class="n">$1</span> <span class="o">&gt;</span> <span class="mi">400</span> <span class="o">&amp;&amp;</span> <span class="n">$2</span> <span class="o">!=</span> <span class="s">&quot;total&quot;</span> <span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">NF</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span><span class="n">printf</span> <span class="s">&quot;%s%s&quot;</span><span class="p">,</span> <span class="n">$i</span><span class="p">,</span> <span class="s">&quot; &quot;</span><span class="p">}</span> <span class="n">print</span> <span class="n">$NF</span> <span class="s">&quot;:1: warning: File more than 400 lines (&quot;</span> <span class="n">$1</span> <span class="s">&quot;), consider refactoring.&quot;</span> <span class="p">}</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果你需要更好的改善你的代码推荐<a href="http://oclint.org/" target="_blank">OCLint</a>可以更好的帮你改善代码质量，可以配合<a href="https://github.com/facebook/xctool" target="_blank">xctool</a>很强大。如果你约束能里不大好，那推荐你<a href="https://itunes.apple.com/us/app/objective-clean/id713910413?mt=12" target="_blank">Objective-Clean</a>，这样如果你不符合规则就等着不能Build吧。其实这样蛮好的O.O。当然你也可以使用<a href="http://www.jetbrains.com/objc/" target="_blank">AppCode</a>这个强大的编辑器来改善。</p>

<p>2.还有一个好的方法是经常在项目中使用TODO，FIXME等，这样可以帮助我们下次浏览项目快速定位和提醒你哪些代码需要继续改进，这段Build Phrases可以用warning的方式提醒你哪些需要处理，相比<a href="https://github.com/trawor/XToDo" target="_blank">XToDo</a>这个插件更为直观不需要你打开界面去寻找，直接提示，但是如果你要可视化界面也可以用XToDo这款插件，还是很不错的。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">KEYWORDS</span><span class="o">=</span><span class="s">&quot;TODO|FIXME|\?\?\?:|\!\!\!:&quot;</span>
</span><span class='line'><span class="n">find</span> <span class="s">&quot;${SRCROOT}&quot;</span> <span class="err">\</span><span class="p">(</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.h&quot;</span> <span class="o">-</span><span class="n">or</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.m&quot;</span> <span class="err">\</span><span class="p">)</span> <span class="o">-</span><span class="n">and</span> <span class="err">\</span><span class="p">(</span> <span class="o">-</span><span class="n">path</span> <span class="s">&quot;${SRCROOT}/Pods/*&quot;</span> <span class="o">-</span><span class="n">prune</span> <span class="o">-</span><span class="n">o</span> <span class="o">-</span><span class="n">print0</span> <span class="err">\</span><span class="p">)</span> <span class="o">|</span> <span class="n">xargs</span> <span class="o">-</span><span class="mi">0</span> <span class="n">egrep</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">filename</span> <span class="o">--</span><span class="n">line</span><span class="o">-</span><span class="n">number</span> <span class="o">--</span><span class="n">only</span><span class="o">-</span><span class="n">matching</span> <span class="s">&quot;($KEYWORDS).*\$&quot;</span> <span class="o">|</span> <span class="n">perl</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s">&quot;s/($KEYWORDS)/ warning: \$1/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.再推荐一个Xcode小技巧是Edit all in Scope 这个功能，这个功能就强大了，而且比较酷，适合进行大批量的修改变量和方法；选定一个想要修改的字符串，然后选择Edit－Edit all in Scope，然后在你输入的时候，所有该字符出现的地方都进行同步更改，看起来很cool的。</p>

<p>4.再推荐一个工具，你也许会遇到项目中使用自定义的外部字体，虽然导入项目中修改plist文件可以用代码来改变字体，但是在xib中选择字体是没有，你必须连接到代码中修改，很麻烦，所以推荐一款工具安装后添加一个Build Phrases就可以在xib中随意的选择外部字体了。工具叫<a href="http://pitaya.ch/moarfonts/" target="_blank">Moarfonts</a>，如果项目，可以考虑一下，还是不错的。</p>

<p>5.最后再推荐两款xcode插件，代码规范/美化工具<a href="https://github.com/benoitsan/BBUncrustifyPlugin-Xcode" target="_blank">BBUncrustifyPlugin-Xcode</a>,这边是配置文件<a href="https://github.com/bengardner/uncrustify/blob/master/etc/objc.cfg" target="_blank">关于objc语言的</a>。第二个插件是推荐给更新到xcode5.1的，由于改善了autolayout，可能这款插件可以更方便的布局<a href="https://github.com/RolandasRazma/RRConstraintsPlugin" target="_blank">RRConstraintsPlugin</a></p>

<p>结语：如果大家需要Moarfonts，我可以共享一下<a href="https://www.dropbox.com/s/21cokfqw8gvgd0v/moarfonts-1.0.3.zip" target="_blank">Moarfonts</a>如果觉得可以可以支持一下作者，如果小伙伴有更好的实用的Build Phrases可以分享<a href="http://weibo.com/phpmaple" target="_blank">@Koofrank</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一记]]></title>
    <link href="http://phpmaple.github.io/blog/2014/03/08/weekreport/"/>
    <updated>2014-03-08T17:45:00+08:00</updated>
    <id>http://phpmaple.github.io/blog/2014/03/08/weekreport</id>
    <content type="html"><![CDATA[<p><img src="http://phpmaple.github.io/images/2014/03/08/week.jpg"></p>

<p>由于上次的博文发现大家对工具还是蛮感兴趣的，所以今天也是由工具开头。之后说一些我这周工作中遇到的问题，可以给大家分享一下。</p>

<!--more-->


<h2>工具介绍</h2>

<h3><a href="https://github.com/dblock/fui" target="_blank">FUI</a></h3>

<p>可能我们应用中经常import了很多类，但是经过不停的修改后可能已经不需要导入这个类，可是我们没有删除#import，这样会导致我们编译速度变慢，这个工具就是帮你发现你导入但未使用的类。</p>

<h3><a href="http://objclean.com/index.php" target="_blank">OBJECTIVE-CLEAN</a></h3>

<p>这个工具可以更好的约束团队中每个人代码规范，可以设置一个配置文件，之后团队中每个人如何不符合代码规范就会提示警告和错误。</p>

<h3><a href="https://itunes.apple.com/cn/app/liya/id455484422?mt=12" target="_blank">Liya</a></h3>

<p>sqlite查看工具，可能大家都使用过MesaSQLite这个工具，但是我觉得这个工具更方便和友好，大家可以试试。</p>

<h3><a href="http://luckymarmot.com/paw" target="_blank">Paw</a></h3>

<p>一款可以管理HTTP &amp; REST API工具，界面非常漂亮，比chrome插件postman更友好，推荐给大家，可以更好的管理接口，定位问题。</p>

<h2>工作中遇到的问题</h2>

<h3>UIButton居中图片和文字</h3>

<p>我们都知道UIbutton可以中使用UIEdgeInsetsMake可以改变text和image来居中，但是网上大部分的例子都没有考虑到当字符长度很长出现省略号的时候就不会居中，下面这个UIButton的category可以实现无论字多长都会居中而且可以设置图片在文字上面还是下面。</p>

<figure class='code'><figcaption><span>button居中</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">centerImageAndButton:</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nv">gap</span> <span class="nf">imageOnTop:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">imageOnTop</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">imageOnTop</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">CGSize</span> <span class="n">imageSize</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">titleEdgeInsets</span> <span class="o">=</span> <span class="n">UIEdgeInsetsMake</span><span class="p">((</span><span class="n">imageSize</span><span class="p">.</span><span class="n">height</span><span class="o">+</span><span class="n">gap</span><span class="p">)</span><span class="o">*</span><span class="n">sign</span><span class="p">,</span> <span class="o">-</span><span class="n">imageSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">CGSize</span> <span class="n">titleSize</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">titleLabel</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">imageEdgeInsets</span> <span class="o">=</span> <span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="o">-</span><span class="p">(</span><span class="n">titleSize</span><span class="p">.</span><span class="n">height</span><span class="o">+</span><span class="n">gap</span><span class="p">)</span><span class="o">*</span><span class="n">sign</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="n">titleSize</span><span class="p">.</span><span class="n">width</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p class='info warning' data-title='Xcode一打开就Crash重装无效'>最终发现<a href="https://github.com/ricobeck/KFCocoaPodsPlugin" target="_blank">KFCocoaPodsPlugin</a>是这个插件的问题，可能是我系统升级到10.9.2了与这个插件不兼容导致的，但是有的人不会出现，我已经联系了作者，最后知道了原来xcode卸载重装，第三方插件是不会清除的。</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[启程]]></title>
    <link href="http://phpmaple.github.io/blog/2014/02/28/my-first-article/"/>
    <updated>2014-02-28T13:39:00+08:00</updated>
    <id>http://phpmaple.github.io/blog/2014/02/28/my-first-article</id>
    <content type="html"><![CDATA[<p><img src="http://phpmaple.github.io/images/2014/02/28/start.jpg"></p>

<p>引言：其实这个网站已经有了很长时间，但是一直都没有写下一篇博文，可能是没有时间，可能是偷懒，可以找出一大堆的理由，但是久而久之，发现学的越多，似乎知道的就越少了，所以还是决定记录点什么，哪怕只是一些憋足的字也好，坚信：坚持一些东西，总会获得一些回报。</p>

<!--more-->


<h2>下面介绍一下我常用的iOS开发或者优化的小工具</h2>

<p>由于很多工具大多数博客都已经介绍过了，我就列举一些我认为还不错但是大家不常列举的：</p>

<hr />

<h3><a href="https://github.com/krzysztofzablocki/crafter" target="_blank">Crafter</a></h3>

<p>你是否经常见一个Project之后你经常会建立一个Podfile，然后把自己一些几乎每个项目都要用的第三方库加进去或者，添加ignore文件等等重复的事情，Crafter 是一个可以自动化初始化你xcode工程的默认配置，是由Ruby语言写的。一个script即可以自动化帮你配置好你的项目。</p>

<h3><a href="http://wasted.werk01.de/" target="_blank">Wasted</a></h3>

<p>你是否关心过一个问题，项目体积越来越大，然而图片的体积占了大部分，Wasted只要选取一个ipa文件就可以帮你分析出哪些可以优化，然后生成了一个文件夹是他帮你优化过的图片还有一个表格，你可以选择性的替换原项目的图片，肉眼几乎感觉不到优化前后的区别。</p>

<h3><a href="https://github.com/jeffhodnett/Unused" target="_blank">Unused</a></h3>

<p>之前看到很多人已经说过可以用一个script来检测出项目中未使用过的图片然后用生成一个文件来告诉你哪些没有使用过，这个工具用可视化的界面来检测告诉你更亲切。</p>

<h3><a href="https://itunes.apple.com/cn/app/linguan/id477163052?mt=12" target="_blank">Linguan</a></h3>

<p>是否遇到过一种情况项目起初只有一种语言，经过后续很多版本更新之后老板要求你出个多过语言版本，但是那么多的项目文件和xib，显然手动的去寻找是不科学的，这款工具就可以帮你找出项目里的所有string包括xib中的然后可以导出.Strings格式，然后交给你们翻译的就可以了。</p>

<h2>然后在翻译一段iOS小文（水平有限）</h2>

<hr />

<h3>声明Blocks内联</h3>

<p>译自<a href="http://macoscope.com/blog/calling-blocks-inline/" target="_blank">Calling Blocks Inline</a></p>

<p>我最新发现了一个在oc中使用Blocks非常有趣的的方法,它定义起来也许像in javascript里那样，样子是这样的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">const</span> <span class="n">NSInteger</span> <span class="n">value</span> <span class="o">=</span> <span class="p">(</span><span class="o">^</span><span class="n">NSInteger</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">switch</span> <span class="p">(</span><span class="n">type</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">TypeOne:</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="nl">TypeTwo:</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">case</span> <span class="nl">TypeUnknown:</span>
</span><span class='line'>        <span class="k">case</span> <span class="nl">TypeUnspecified:</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">NSNotFound</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">default</span><span class="o">:</span>
</span><span class='line'>            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}());</span>
</span></code></pre></td></tr></table></div></figure>


<p>首选，它在定义这个Block的同时赋值给了我们的变量，然后指定了变量是<code>const</code>类型，Block内所有相关的代码都是为了计算出值赋值给变量，这样一来代码更容易阅读，而且这都可以被GCC code block extension所识别，这种方法实现的有点就是可以有<code>return</code>这个关键词，这使得我们可以是用<code>switch</code>并且循环里不使用<code>break</code>，缺点是不得不重复声明变量的类型，而且当我们遇到<code>UISwipeGestureRecognizerDirection</code>是非常讨厌的，例如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">const</span> <span class="kt">BOOL</span> <span class="n">anyValueIsXyz</span> <span class="o">=</span> <span class="p">(</span><span class="o">^</span><span class="kt">BOOL</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="n">QwertyValue</span> <span class="o">*</span><span class="n">value</span> <span class="k">in</span> <span class="n">values</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">value</span><span class="p">.</span><span class="n">isXyz</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}());</span>
</span></code></pre></td></tr></table></div></figure>


<p>大家认为呢？</p>
]]></content>
  </entry>
  
</feed>
